name: Build and Publish GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'  # e.g. v1.2.3

jobs:
  build-and-release:
    name: Build, Package and Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: 'maven'

      - name: Extract version from tag
        id: vars
        run: |
          TAG=${GITHUB_REF##*/}
          echo "Tag is $TAG"
          # strip leading 'v' if present
          VERSION=${TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build with Maven
        run: mvn clean package -DskipTests=false

      - name: Locate built artifact
        id: artifact
        run: |
          # Adjust if your artifactId/version conventions differ
          JAR=$(find target -maxdepth 1 -type f -name "*-jar-with-dependencies.jar" || true)
          if [ -z "$JAR" ]; then
            # fallback to normal jar
            JAR=$(find target -maxdepth 1 -type f -name "*.jar" ! -name "*-sources.jar" ! -name "*-javadoc.jar" | head -n1)
          fi
          if [ -z "$JAR" ]; then
            echo "No jar found in target/"; exit 1
          fi
          echo "artifact=$JAR" >> $GITHUB_OUTPUT
          echo "Found $JAR"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            Built from commit ${{ github.sha }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ steps.artifact.outputs.artifact }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
